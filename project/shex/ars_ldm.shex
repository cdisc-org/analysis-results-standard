BASE <https://www.cdisc.org/ars/1-0/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX linkml: <https://w3id.org/linkml/>


linkml:String xsd:string

linkml:Integer xsd:integer

linkml:Boolean xsd:boolean

linkml:Float xsd:float

linkml:Double xsd:double

linkml:Decimal xsd:decimal

linkml:Time xsd:time

linkml:Date xsd:date

linkml:Datetime xsd:dateTime

linkml:DateOrDatetime linkml:DateOrDatetime

linkml:Uriorcurie IRI

linkml:Curie xsd:string

linkml:Uri IRI

linkml:Ncname xsd:string

linkml:Objectidentifier IRI

linkml:Nodeidentifier NONLITERAL

<Analysis> CLOSED {
    (  $<Analysis_tes> (  &<NamedObject_tes> ;
          rdf:type [ <NamedObject> ] ? ;
          <version> @linkml:Integer ? ;
          <categoryIds> @<AnalysisCategory> * ;
          <description> @linkml:String ? ;
          <reason> @linkml:String ;
          <purpose> @linkml:String ;
          <documentRefs> @<DocumentRef> * ;
          <analysisSetId> @<AnalysisSet> ? ;
          <orderedGroupings> @<OrderedGroupingFactor> * ;
          <dataSubsetId> @<DataSubset> ? ;
          <dataset> @linkml:String ? ;
          <variable> @linkml:String ? ;
          <methodId> @<AnalysisMethod> ;
          <referencedAnalysisOperations> @<ReferencedAnalysisOperation> * ;
          <programmingCode> @<AnalysisOutputProgrammingCode> ? ;
          <results> @<OperationResult> *
       ) ;
       rdf:type [ <Analysis> ]
    )
}

<AnalysisCategorization> CLOSED {
    (  $<AnalysisCategorization_tes> (  <label> @linkml:String ? ;
          <categories> @<AnalysisCategory> +
       ) ;
       rdf:type [ <AnalysisCategorization> ]
    )
}

<AnalysisCategory> CLOSED {
    (  $<AnalysisCategory_tes> (  <label> @linkml:String ? ;
          <subCategorizations> @<AnalysisCategorization> *
       ) ;
       rdf:type [ <AnalysisCategory> ]
    )
}

<AnalysisGroup> CLOSED {
    (  $<AnalysisGroup_tes> (  &<Group_tes> ;
          rdf:type [ <Group> ] ?
       ) ;
       rdf:type [ <AnalysisGroup> ]
    )
}

<AnalysisMethod> CLOSED {
    (  $<AnalysisMethod_tes> (  &<NamedObject_tes> ;
          rdf:type [ <NamedObject> ] ? ;
          <label> @linkml:String ? ;
          <description> @linkml:String ? ;
          <operations> @<Operation> + ;
          <documentRefs> @<DocumentRef> * ;
          <codeTemplate> @<AnalysisProgrammingCodeTemplate> ?
       ) ;
       rdf:type [ <AnalysisMethod> ]
    )
}

<AnalysisOutputProgrammingCode>  (
    CLOSED {
       (  $<AnalysisOutputProgrammingCode_tes> (  <context> @linkml:String ;
             <code> @linkml:String ? ;
             <documentRefs> @<DocumentRef> * ;
             <parameters> @<CodeParameter> *
          ) ;
          rdf:type [ <AnalysisOutputProgrammingCode> ] ?
       )
    } OR @<AnalysisProgrammingCodeTemplate>
)

<AnalysisProgrammingCodeTemplate> CLOSED {
    (  $<AnalysisProgrammingCodeTemplate_tes> (  &<AnalysisOutputProgrammingCode_tes> ;
          rdf:type [ <AnalysisOutputProgrammingCode> ] ? ;
          <parameters> @<TemplateCodeParameter> *
       ) ;
       rdf:type [ <AnalysisProgrammingCodeTemplate> ] ?
    )
}

<AnalysisSet> CLOSED {
    (  $<AnalysisSet_tes> (  &<WhereClause_tes> ;
          rdf:type [ <WhereClause> ] ? ;
          <label> @linkml:String ? ;
          <compoundExpression> @<CompoundSetExpression> ?
       ) ;
       rdf:type [ <AnalysisSet> ]
    )
}

<CodeParameter>  (
    CLOSED {
       (  $<CodeParameter_tes> (  &<NamedObject_tes> ;
             rdf:type [ <NamedObject> ] ? ;
             <description> @linkml:String ? ;
             <value> @linkml:String
          ) ;
          rdf:type [ <CodeParameter> ] ?
       )
    } OR @<TemplateCodeParameter>
)

<CompoundGroupExpression> CLOSED {
    (  $<CompoundGroupExpression_tes> (  &<WhereClauseCompoundExpression_tes> ;
          rdf:type [ <WhereClauseCompoundExpression> ] ? ;
          <whereClauses> @<Group> *
       ) ;
       rdf:type [ <CompoundGroupExpression> ] ?
    )
}

<CompoundSetExpression> CLOSED {
    (  $<CompoundSetExpression_tes> (  &<WhereClauseCompoundExpression_tes> ;
          rdf:type [ <WhereClauseCompoundExpression> ] ? ;
          <whereClauses> @<AnalysisSet> *
       ) ;
       rdf:type [ <CompoundSetExpression> ] ?
    )
}

<CompoundSubsetExpression> CLOSED {
    (  $<CompoundSubsetExpression_tes> (  &<WhereClauseCompoundExpression_tes> ;
          rdf:type [ <WhereClauseCompoundExpression> ] ? ;
          <whereClauses> @<WhereClause> *
       ) ;
       rdf:type [ <CompoundSubsetExpression> ] ?
    )
}

<DataGroup> CLOSED {
    (  $<DataGroup_tes> (  &<Group_tes> ;
          rdf:type [ <Group> ] ?
       ) ;
       rdf:type [ <DataGroup> ]
    )
}

<DataGroupingFactor> CLOSED {
    (  $<DataGroupingFactor_tes> (  &<GroupingFactor_tes> ;
          rdf:type [ <GroupingFactor> ] ? ;
          <groups> @<DataGroup> *
       ) ;
       rdf:type [ <DataGroupingFactor> ]
    )
}

<DataSubset> CLOSED {
    (  $<DataSubset_tes> (  &<WhereClause_tes> ;
          rdf:type [ <WhereClause> ] ? ;
          <label> @linkml:String ? ;
          <compoundExpression> @<CompoundSubsetExpression> ?
       ) ;
       rdf:type [ <DataSubset> ]
    )
}

<DisplaySection> CLOSED {
    (  $<DisplaySection_tes> (  <sectionType> @<DisplaySectionType> ? ;
          <subSections> @<DisplaySubSection> *
       ) ;
       rdf:type [ <DisplaySection> ] ?
    )
}

<DisplaySubSection> CLOSED {
    (  $<DisplaySubSection_tes> (  <order> @linkml:Integer ;
          <text> @linkml:String ?
       ) ;
       rdf:type [ <DisplaySubSection> ]
    )
}

<DocumentRef> CLOSED {
    (  $<DocumentRef_tes> (  <referenceDocumentId> @<ReferenceDocument> ;
          <pageRefs> @<PageRef> *
       ) ;
       rdf:type [ <DocumentRef> ] ?
    )
}

<Group>  (
    CLOSED {
       (  $<Group_tes> (  &<WhereClause_tes> ;
             rdf:type [ <WhereClause> ] ? ;
             <label> @linkml:String ? ;
             <compoundExpression> @<CompoundGroupExpression> ?
          ) ;
          rdf:type [ <Group> ]
       )
    } OR @<AnalysisGroup> OR @<DataGroup>
)

<GroupingFactor>  (
    @<DataGroupingFactor> OR @<SubjectGroupingFactor>
)

<GroupingFactor_struct> {
    (  $<GroupingFactor_tes> (  <label> @linkml:String ? ;
          <groupingVariable> @linkml:String ? ;
          <dataDriven> @linkml:Boolean ;
          <groups> @<Group> *
       ) ;
       rdf:type [ <GroupingFactor> ]
    )
}

<NamedObject>  (
    @<Analysis> OR @<AnalysisMethod> OR @<CodeParameter> OR @<Operation> OR @<OrderedListItem> OR @<Output> OR @<OutputDisplay> OR
    @<OutputFile> OR @<ReferenceDocument> OR @<ReportingEvent>
)

<NamedObject_struct> {
    (  $<NamedObject_tes> <name> @linkml:String ;
       rdf:type [ <NamedObject> ] ?
    )
}

<NestedList> CLOSED {
    (  $<NestedList_tes> <listItems> @<OrderedListItem> * ;
       rdf:type [ <NestedList> ] ?
    )
}

<Operation> CLOSED {
    (  $<Operation_tes> (  &<NamedObject_tes> ;
          rdf:type [ <NamedObject> ] ? ;
          <label> @linkml:String ? ;
          <referencedOperationRelationships> @<ReferencedOperationRelationship> * ;
          <resultPattern> @linkml:String ?
       ) ;
       rdf:type [ <Operation> ]
    )
}

<OperationResult> CLOSED {
    (  $<OperationResult_tes> (  <operationId> @<Operation> ;
          <resultGroups> @<ResultGroup> * ;
          <rawValue> @linkml:String ? ;
          <formattedValue> @linkml:String ?
       ) ;
       rdf:type [ <OperationResult> ] ?
    )
}

<OrderedDisplay> CLOSED {
    (  $<OrderedDisplay_tes> (  <order> @linkml:Integer ;
          <display> @<OutputDisplay> ?
       ) ;
       rdf:type [ <OrderedDisplay> ] ?
    )
}

<OrderedGroupingFactor> CLOSED {
    (  $<OrderedGroupingFactor_tes> (  <order> @linkml:Integer ;
          <groupingId> @<GroupingFactor> ? ;
          <resultsByGroup> @linkml:Boolean
       ) ;
       rdf:type [ <OrderedGroupingFactor> ] ?
    )
}

<OrderedListItem> CLOSED {
    (  $<OrderedListItem_tes> (  &<NamedObject_tes> ;
          rdf:type [ <NamedObject> ] ? ;
          <level> @linkml:Integer ;
          <order> @linkml:Integer ;
          <sublist> @<NestedList> ? ;
          <analysisId> @<Analysis> ? ;
          <outputId> @<Output> ?
       ) ;
       rdf:type [ <OrderedListItem> ] ?
    )
}

<Output> CLOSED {
    (  $<Output_tes> (  &<NamedObject_tes> ;
          rdf:type [ <NamedObject> ] ? ;
          <version> @linkml:Integer ? ;
          <fileSpecifications> @<OutputFile> * ;
          <displays> @<OrderedDisplay> * ;
          <categoryIds> @<AnalysisCategory> * ;
          <documentRefs> @<DocumentRef> * ;
          <programmingCode> @<AnalysisOutputProgrammingCode> ?
       ) ;
       rdf:type [ <Output> ]
    )
}

<OutputDisplay> CLOSED {
    (  $<OutputDisplay_tes> (  &<NamedObject_tes> ;
          rdf:type [ <NamedObject> ] ? ;
          <version> @linkml:Integer ? ;
          <displayTitle> @linkml:String ? ;
          <displaySections> @<DisplaySection> *
       ) ;
       rdf:type [ <OutputDisplay> ]
    )
}

<OutputFile> CLOSED {
    (  $<OutputFile_tes> (  &<NamedObject_tes> ;
          rdf:type [ <NamedObject> ] ? ;
          <fileType> @linkml:String ? ;
          <location> @linkml:Uri ? ;
          <style> @linkml:String ?
       ) ;
       rdf:type [ <OutputFile> ] ?
    )
}

<PageNameList> CLOSED {
    (  $<PageNameList_tes> <pageNames> @linkml:Integer + ;
       rdf:type [ <PageNameList> ] ?
    )
}

<PageNameRef> CLOSED {
    (  $<PageNameRef_tes> (  &<PageRef_tes> ;
          rdf:type [ <PageRef> ] ? ;
          <refType> @<PageRefType> ;
          <pages> @<PageNameList> ?
       ) ;
       rdf:type [ <PageNameRef> ] ?
    )
}

<PageNumberList> CLOSED {
    (  $<PageNumberList_tes> <pageNumbers> @linkml:Integer + ;
       rdf:type [ <PageNumberList> ] ?
    )
}

<PageNumberListRef> CLOSED {
    (  $<PageNumberListRef_tes> (  &<PageRef_tes> ;
          rdf:type [ <PageRef> ] ? ;
          <refType> @<PageRefType> ;
          <pages> @<PageNumberList> ?
       ) ;
       rdf:type [ <PageNumberListRef> ] ?
    )
}

<PageNumberRangeRef> CLOSED {
    (  $<PageNumberRangeRef_tes> (  &<PageRef_tes> ;
          rdf:type [ <PageRef> ] ? ;
          <refType> @<PageRefType> ;
          <pages> @<PageRange> ?
       ) ;
       rdf:type [ <PageNumberRangeRef> ] ?
    )
}

<PageRange> CLOSED {
    (  $<PageRange_tes> (  <firstPage> @linkml:Integer ;
          <lastPage> @linkml:Integer
       ) ;
       rdf:type [ <PageRange> ] ?
    )
}

<PageRef>  (
    CLOSED {
       (  $<PageRef_tes> (  <refType> @<PageRefType> ;
             <label> @linkml:String ? ;
             <pages> @linkml:String ?
          ) ;
          rdf:type [ <PageRef> ] ?
       )
    } OR @<PageNameRef> OR @<PageNumberListRef> OR @<PageNumberRangeRef>
)

<ReferencedAnalysisOperation> CLOSED {
    (  $<ReferencedAnalysisOperation_tes> (  <referencedOperationId> @<ReferencedOperationRelationship> ? ;
          <analysisId> @<Analysis>
       ) ;
       rdf:type [ <ReferencedAnalysisOperation> ] ?
    )
}

<ReferenceDocument> CLOSED {
    (  $<ReferenceDocument_tes> (  &<NamedObject_tes> ;
          rdf:type [ <NamedObject> ] ? ;
          <location> @linkml:Uri ?
       ) ;
       rdf:type [ <ReferenceDocument> ]
    )
}

<ReferencedOperationRelationship> CLOSED {
    (  $<ReferencedOperationRelationship_tes> (  <referencedOperationRole> @linkml:String ;
          <operationId> @<Operation> ;
          <analysisId> @<Analysis> ? ;
          <description> @linkml:String ?
       ) ;
       rdf:type [ <ReferencedOperationRelationship> ]
    )
}

<ReportingEvent> CLOSED {
    (  $<ReportingEvent_tes> (  &<NamedObject_tes> ;
          rdf:type [ <NamedObject> ] ? ;
          <listOfPlannedAnalyses> @<NestedList> ;
          <listOfPlannedOutputs> @<NestedList> ? ;
          <analysisSets> @<AnalysisSet> * ;
          <analysisGroupings> @<SubjectGroupingFactor> * ;
          <dataSubsets> @<DataSubset> * ;
          <dataGroupings> @<DataGroupingFactor> * ;
          <globalDisplaySections> @<DisplaySection> * ;
          <analysisCategorizations> @<AnalysisCategorization> * ;
          <analyses> @<Analysis> * ;
          <methods> @<AnalysisMethod> * ;
          <outputs> @<Output> * ;
          <referenceDocuments> @<ReferenceDocument> * ;
          <terminologyExtentions> @<TerminologyExtension> *
       ) ;
       rdf:type [ <ReportingEvent> ] ?
    )
}

<ResultGroup> CLOSED {
    (  $<ResultGroup_tes> (  <groupingId> @<GroupingFactor> ? ;
          <groupId> @<Group> ? ;
          <groupValue> @linkml:String ?
       ) ;
       rdf:type [ <ResultGroup> ] ?
    )
}

<SponsorTerm> CLOSED {
    (  $<SponsorTerm_tes> (  <submissionValue> @linkml:String ;
          <description> @linkml:String ?
       ) ;
       rdf:type [ <SponsorTerm> ]
    )
}

<SubjectGroupingFactor> CLOSED {
    (  $<SubjectGroupingFactor_tes> (  &<GroupingFactor_tes> ;
          rdf:type [ <GroupingFactor> ] ? ;
          <groups> @<AnalysisGroup> *
       ) ;
       rdf:type [ <SubjectGroupingFactor> ]
    )
}

<TemplateCodeParameter> CLOSED {
    (  $<TemplateCodeParameter_tes> (  &<CodeParameter_tes> ;
          rdf:type [ <CodeParameter> ] ? ;
          <valueSource> @linkml:String ? ;
          <value> @linkml:String ?
       ) ;
       rdf:type [ <TemplateCodeParameter> ] ?
    )
}

<TerminologyExtension> CLOSED {
    (  $<TerminologyExtension_tes> (  <enumeration> @<ExtensibleTerminology> ? ;
          <sponsorTerms> @<SponsorTerm> +
       ) ;
       rdf:type [ <TerminologyExtension> ] ?
    )
}

<WhereClause>  (
    CLOSED {
       (  $<WhereClause_tes> (  <level> @linkml:Integer ? ;
             <order> @linkml:Integer ? ;
             <condition> @<WhereClauseCondition> ? ;
             <compoundExpression> @<WhereClauseCompoundExpression> ?
          ) ;
          rdf:type [ <WhereClause> ] ?
       )
    } OR @<AnalysisSet> OR @<DataSubset> OR @<Group>
)

<WhereClauseCompoundExpression>  (
    CLOSED {
       (  $<WhereClauseCompoundExpression_tes> (  <logicalOperator> @<ExpressionLogicalOperator> ;
             <whereClauses> @<WhereClause> *
          ) ;
          rdf:type [ <WhereClauseCompoundExpression> ] ?
       )
    } OR @<CompoundGroupExpression> OR @<CompoundSetExpression> OR @<CompoundSubsetExpression>
)

<WhereClauseCondition> CLOSED {
    (  $<WhereClauseCondition_tes> (  <dataset> @linkml:String ? ;
          <variable> @linkml:String ? ;
          <comparator> @<ConditionComparator> ? ;
          <value> @linkml:String ?
       ) ;
       rdf:type [ <WhereClauseCondition> ] ?
    )
}


