// An analysis that is designed to meet a requirement of the reporting event. Each analysis is defined as a set of specifications, including:
// * The analysis variable that is the subject of the analysis.
// * The analysis method (set of statistical operations) that is performed for the analysis variable.
// * The analysis set (subject population) for which the analysis is performed.
// * The subset of data records on which the analysis is performed (optional).
// * One or more factors by which either subjects or data records are grouped for analysis (optional).
// 
message Analysis
 {
  string name = 0
  string id = 0
  integer version = 0
 repeated  analysisCategory categoryIds = 0
  string description = 0
  extensibleTerminologyTerm reason = 0
  extensibleTerminologyTerm purpose = 0
 repeated  documentReference documentRefs = 0
  analysisSet analysisSetId = 0
 repeated  orderedGroupingFactor orderedGroupings = 0
  dataSubset dataSubsetId = 0
  string dataset = 0
  string variable = 0
  analysisMethod methodId = 0
 repeated  referencedAnalysisOperation referencedAnalysisOperations = 0
  analysisOutputProgrammingCode programmingCode = 0
 repeated  operationResult results = 0
 }
// A set of related implementer-defined categories that can be used to categorize analyses or outputs.
message AnalysisCategorization
 {
  string id = 0
  string label = 0
 repeated  analysisCategory categories = 0
 }
// An implementer-defined category of analyses/outputs, which may include one or more sub-categorization.
message AnalysisCategory
 {
  string id = 0
  string label = 0
 repeated  analysisCategorization subCategorizations = 0
 }
// A subdivision of the subject population based on a defined factor (e.g., subjects whose treatment is Drug A, subjects whose gender is male).
message AnalysisGroup
 {
  integer level = 0
  integer order = 0
  whereClauseCondition condition = 0
  string id = 0
  string label = 0
  compoundGroupExpression compoundExpression = 0
 }
// A set of one or more statistical operations.
message AnalysisMethod
 {
  string name = 0
  string id = 0
  string label = 0
  string description = 0
 repeated  operation operations = 0
 repeated  documentReference documentRefs = 0
  analysisProgrammingCodeTemplate codeTemplate = 0
 }
// A parameter whose value is used in programming code for a specific analysis or output.
message AnalysisOutputCodeParameter
 {
  string name = 0
  string description = 0
 repeated  string value = 0
 }
// Programming statements and/or a reference to the program used to perform a specific analysis or create a specific output.
message AnalysisOutputProgrammingCode
 {
  string context = 0
  string code = 0
  documentReference documentRef = 0
 repeated  analysisOutputCodeParameter parameters = 0
 }
// Programming statements and/or a reference to a used as a template for creation of a program to perform method operations for a specific analysis.
message AnalysisProgrammingCodeTemplate
 {
  string context = 0
  string code = 0
  documentReference documentRef = 0
 repeated  templateCodeParameter parameters = 0
 }
// The purpose of the analysis within the body of evidence (e.g., section in the clinical study report).
message AnalysisPurpose
 {
  analysisPurposeEnum controlledTerm = 0
  sponsorTerm sponsorTermId = 0
 }
// The rationale for performing this analysis.
message AnalysisReason
 {
  analysisReasonEnum controlledTerm = 0
  sponsorTerm sponsorTermId = 0
 }
// A set of subjects whose data are to be included in the main analyses. This should be defined in the statistical section of the protocol. NOTE: There are a number of potential analysis sets, including, for example, the set based upon the intent-to-treat principle. [ICH E9]
message AnalysisSet
 {
  integer level = 0
  integer order = 0
  whereClauseCondition condition = 0
  string id = 0
  string label = 0
  compoundSetExpression compoundExpression = 0
 }
// A compound expression consisting of either two or more identified group combined with the `AND` or `OR` logical operator, or a single identified group negated with the `NOT` logical operator.
message CompoundGroupExpression
 {
  expressionLogicalOperatorEnum logicalOperator = 0
 repeated  group whereClauses = 0
 }
// A compound expression consisting of either two or more identified analysis sets combined with the `AND` or `OR` logical operator, or a single identified analysis set negated with the `NOT` logical operator.
message CompoundSetExpression
 {
  expressionLogicalOperatorEnum logicalOperator = 0
 repeated  analysisSet whereClauses = 0
 }
// A compound expression consisting of either two or more where clauses combined with the `AND` or `OR` logical operator, or a single where clause negated with the `NOT` logical operator.
message CompoundSubsetExpression
 {
  expressionLogicalOperatorEnum logicalOperator = 0
 repeated  whereClause whereClauses = 0
 }
// A subdivision of the analysis dataset records based on a defined factor.
message DataGroup
 {
  integer level = 0
  integer order = 0
  whereClauseCondition condition = 0
  string id = 0
  string label = 0
  compoundGroupExpression compoundExpression = 0
 }
// A factor used to subdivide data records in an analysis dataset for analysis.
message DataGroupingFactor
 {
  string id = 0
  string label = 0
  string groupingVariable = 0
  boolean dataDriven = 0
 repeated  dataGroup groups = 0
 }
// A subset of data identified by selection criteria for inclusion in the analysis.
message DataSubset
 {
  integer level = 0
  integer order = 0
  whereClauseCondition condition = 0
  string id = 0
  string label = 0
  compoundSubsetExpression compoundExpression = 0
 }
// A part of a tabular display containing one or more pieces of informational text (e.g., title, footnote).
message DisplaySection
 {
  displaySectionTypeEnum sectionType = 0
 repeated  orderedDisplaySubSection orderedSubSections = 0
 }
// An occurrence of a display section containing text.
message DisplaySubSection
 {
  string id = 0
  string text = 0
 }
// A reference to an external document.
message DocumentReference
 {
  referenceDocument referenceDocumentId = 0
 repeated  pageRef pageRefs = 0
 }
// A global definition for part of a tabular display containing one or more pieces of informational text that may be used in multiple displays.
message GlobalDisplaySection
 {
  displaySectionTypeEnum sectionType = 0
 repeated  displaySubSection subSections = 0
 }
// A subdivision of the subject population or analysis dataset record set based on a defined factor.
message Group
 {
  integer level = 0
  integer order = 0
  whereClauseCondition condition = 0
  string id = 0
  string label = 0
  compoundGroupExpression compoundExpression = 0
 }
// A list of items (analyses or outputs) that may be organized within sub-lists.
message NestedList
 {
 repeated  orderedListItem listItems = 0
 }
// A statistical operation that produces a single analysis result value as part of an analysis method.
message Operation
 {
  string name = 0
  string id = 0
  string label = 0
 repeated  referencedOperationRelationship referencedOperationRelationships = 0
  string resultPattern = 0
 }
// The result of an analysis method operation performed on a subdivision of subjects or data records.
message OperationResult
 {
  operation operationId = 0
 repeated  resultGroup resultGroups = 0
  string rawValue = 0
  string formattedValue = 0
 }
// The role that the referenced operation's result plays in the calculation of the result of this operation.
message OperationRole
 {
  operationRoleEnum controlledTerm = 0
  sponsorTerm sponsorTermId = 0
 }
// A display ordered with respect to other displays in an analysis output.
message OrderedDisplay
 {
  integer order = 0
  outputDisplay display = 0
 }
// A reference to a defined factor by which subjects or data records are grouped for the analysis, ordered with respect to other grouping factors.
message OrderedGroupingFactor
 {
  integer order = 0
  groupingFactor groupingId = 0
  boolean resultsByGroup = 0
 }
// An item (analysis, output or sub-list) ordered relative to other items within a list or sub-list.
message OrderedListItem
 {
  string name = 0
  integer level = 0
  integer order = 0
  nestedList sublist = 0
  analysis analysisId = 0
  output outputId = 0
 }
// A subsection ordered with respect to other subsections of the same type.
message OrderedSubSection
 {
  integer order = 0
  displaySubSection subSection = 0
  displaySubSection subSectionId = 0
 }
// A reference to a subsection defined either globally or in another display section, ordered with respect to other subsections of the same type.
message OrderedSubSectionRef
 {
  integer order = 0
  displaySubSection subSection = 0
  displaySubSection subSectionId = 0
 }
// A report of results and their evaluation based on planned analyses performed during the course of a trial.
message Output
 {
  string name = 0
  string id = 0
  integer version = 0
 repeated  outputFile fileSpecifications = 0
 repeated  orderedDisplay displays = 0
 repeated  analysisCategory categoryIds = 0
 repeated  documentReference documentRefs = 0
  analysisOutputProgrammingCode programmingCode = 0
 }
// A tabular representation of the results of one or more analyses.
message OutputDisplay
 {
  string name = 0
  string id = 0
  integer version = 0
  string displayTitle = 0
 repeated  displaySection displaySections = 0
 }
// A file containing analysis output displays.
message OutputFile
 {
  string name = 0
  extensibleTerminologyTerm fileType = 0
  uri location = 0
  string style = 0
 }
// The file format of the file containing output from analyses.
message OutputFileType
 {
  outputFileTypeEnum controlledTerm = 0
  sponsorTerm sponsorTermId = 0
 }
// One or more pages in the reference document, referenced by named destination.
message PageNameRef
 {
  string label = 0
  pageRefTypeEnum refType = 0
 repeated  integer pageNumbers = 0
 repeated  string pageNames = 0
  integer firstPage = 0
  integer lastPage = 0
 }
// One or more individual pages in the reference document, referenced by page number.
message PageNumberListRef
 {
  string label = 0
  pageRefTypeEnum refType = 0
 repeated  integer pageNumbers = 0
 repeated  string pageNames = 0
  integer firstPage = 0
  integer lastPage = 0
 }
// A range of pages in the reference document, indicated by the first and last page number in the range.
message PageNumberRangeRef
 {
  string label = 0
  pageRefTypeEnum refType = 0
 repeated  integer pageNumbers = 0
 repeated  string pageNames = 0
  integer firstPage = 0
  integer lastPage = 0
 }
// An indication of the analysis that contains results of a referenced operation.
message ReferencedAnalysisOperation
 {
  referencedOperationRelationship referencedOperationRelationshipId = 0
  analysis analysisId = 0
 }
// An external document containing supporting documentation or programming code.
message ReferenceDocument
 {
  string name = 0
  string id = 0
  uri location = 0
 }
// A reference to a statistical operation whose results are used in the calculation of the result for this operation.
message ReferencedOperationRelationship
 {
  string id = 0
  extensibleTerminologyTerm referencedOperationRole = 0
  operation operationId = 0
  analysis analysisId = 0
  string description = 0
 }
// A set of analyses and outputs created to meet a specific reporting requirement, such as a CSR or interim analysis.
message ReportingEvent
 {
  string name = 0
  string id = 0
  integer version = 0
  nestedList listOfPlannedAnalyses = 0
  nestedList listOfPlannedOutputs = 0
 repeated  analysisSet analysisSets = 0
 repeated  subjectGroupingFactor analysisGroupings = 0
 repeated  dataSubset dataSubsets = 0
 repeated  dataGroupingFactor dataGroupings = 0
 repeated  globalDisplaySection globalDisplaySections = 0
 repeated  analysisCategorization analysisCategorizations = 0
 repeated  analysis analyses = 0
 repeated  analysisMethod methods = 0
 repeated  output outputs = 0
 repeated  referenceDocument referenceDocuments = 0
 repeated  terminologyExtension terminologyExtensions = 0
 }
// For the specified grouping factor, an indication of the specific group of subjects or data records associated with the analysis result.
message ResultGroup
 {
  groupingFactor groupingId = 0
  group groupId = 0
  string groupValue = 0
 }
// The sponsor-defined purpose of the analysis within the body of evidence (e.g., section in the clinical study report).
message SponsorAnalysisPurpose
 {
  string controlledTerm = 0
  sponsorTerm sponsorTermId = 0
 }
// The sponsor-defined rationale for performing this analysis.
message SponsorAnalysisReason
 {
  string controlledTerm = 0
  sponsorTerm sponsorTermId = 0
 }
// The sponsor-defined role that the referenced operation's result plays in the calculation of the result of this operation.
message SponsorOperationRole
 {
  string controlledTerm = 0
  sponsorTerm sponsorTermId = 0
 }
// The sponsor-defined file format of the file containing output from analyses.
message SponsorOutputFileType
 {
  string controlledTerm = 0
  sponsorTerm sponsorTermId = 0
 }
// A sponsor-defined term that is included in an extensible set of controlled terminology.
message SponsorTerm
 {
  string id = 0
  string submissionValue = 0
  string description = 0
 }
// A factor used to subdivide the subject population for comparative analysis (e.g., treatment, sex, race, age).
message SubjectGroupingFactor
 {
  string id = 0
  string label = 0
  string groupingVariable = 0
  boolean dataDriven = 0
 repeated  analysisGroup groups = 0
 }
// A replacement parameter whose value is substituted in template programming code to create statements required for a specific analysis.
message TemplateCodeParameter
 {
  string name = 0
  string description = 0
  string valueSource = 0
 repeated  string value = 0
 }
// An extensible set of controlled terminology that has been extended with at least one sponsor-defined term.
message TerminologyExtension
 {
  string id = 0
  extensibleTerminologyEnum enumeration = 0
 repeated  sponsorTerm sponsorTerms = 0
 }
// Selection criteria defined as either a simple condition ([variable] [comparator] [value(s)]) or a compound expression that may combine simple conditions or compound expressions.
message WhereClause
 {
  integer level = 0
  integer order = 0
  whereClauseCondition condition = 0
  whereClauseCompoundExpression compoundExpression = 0
 }
// A compound expression consisting of either two or more where clauses combined with the `AND` or `OR` logical operator, or a single where clause negated with the `NOT` logical operator.
message WhereClauseCompoundExpression
 {
  expressionLogicalOperatorEnum logicalOperator = 0
 repeated  whereClause whereClauses = 0
 }
// A simple selection criterion exressed as [dataset].[variable] [comparator] [value(s)]
message WhereClauseCondition
 {
  string dataset = 0
  string variable = 0
  conditionComparatorEnum comparator = 0
 repeated  string value = 0
 }
